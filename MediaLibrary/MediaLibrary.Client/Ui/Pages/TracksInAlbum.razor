@page "/tracks-in-album"
@inject IMediaLibraryApiWrapper MediaLibraryApi

<Card>
    <Alert Color="Color.Danger" @bind-Visible="@_isAlertVisible">
        <AlertMessage>Вы не ввели название альбома или альбом не найден!</AlertMessage>
    </Alert>
    <CardHeader>
        <h4>Треки в альбоме</h4>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="Track" Data="_tracks" Responsive Striped>
            <DataGridColumns>
                <DataGridColumn TItem="Track" Field="@nameof(Track.Number)" Caption="Номер трека" />
                <DataGridColumn TItem="Track" Field="@nameof(Track.Name)" Caption="Название трека" />
                <DataGridColumn TItem="Track" Field="@nameof(Track.Time)" Caption="Продолжительность" />
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Div>
    <label>Идентификатор альбома:</label>
    <InputNumber @bind-Value="_albumId" />

    <Button Color="Color.Primary" Clicked="RefreshTracksCollection">Поиск</Button>
</Div>

@code {
    private IEnumerable<Track> _tracks = new List<Track>();
    private int _albumId = 0;  
    private bool _isAlertVisible { get; set; } = false;

    private async Task RefreshTracksCollection()
    {
        try
        {
            if (_albumId <= 0)
            {
                _isAlertVisible = true;
                return;
            }

            _tracks = await MediaLibraryApi.GetTracksInAlbum(_albumId);
            _isAlertVisible = false;
        }
        catch
        {
            _isAlertVisible = true;
        }
    }
}
