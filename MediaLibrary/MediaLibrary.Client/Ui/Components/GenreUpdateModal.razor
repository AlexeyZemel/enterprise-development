@inject IMediaLibraryApiWrapper MediaLibraryApi

<Modal @ref="_genreModal">
    <ModalContent Centered>
        <Form>
            <ModalHeader>
                <ModalTitle>Изменить жанр</ModalTitle>
                <CloseButton Clicked="CloseGenreModalAsync" />
            </ModalHeader>

            <ModalBody>
                <Field>
                    <FieldLabel>Название жанра</FieldLabel>
                    @if (GenreToUpdate != null)
                    {
                        <InputText @bind-Value="GenreToUpdate.Name" />
                    }
                </Field>
            </ModalBody>

            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseGenreModalAsync">Отмена</Button>
                <Button Color="Color.Primary" Clicked="UpdateGenreAsync">Изменить</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public EventCallback OnGenreUpdated { get; set; }
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public GenreDto? GenreToUpdate { get; set; }

    private Modal _genreModal = new(); 

    public async Task Show() => await _genreModal.Show();

    private async Task CloseGenreModalAsync() => await _genreModal.Hide();

    private async Task UpdateGenreAsync()
    {
        if (GenreToUpdate != null)
        {
            await MediaLibraryApi.UpdateGenre(Id, GenreToUpdate);
            await _genreModal.Hide();
            await OnGenreUpdated.InvokeAsync();
        }
    }
}
